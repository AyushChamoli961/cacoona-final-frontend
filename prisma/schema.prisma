// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



enum Category {
  BOOKS
  CHARMS
  RINGS
  BRACELETS
  EARRINGS
  PENDANTS
  GIFTS
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  category    Category
  name        String
  isFeatured  Boolean   @default(false)
  isArchived  Boolean   @default(false)
  color        String?
  size         String?
  currentPrice Float
  originalPrice Float
  images      Image[]   // Relation to Image model
  orderItems  OrderItem[]   // Relation to Order model
  quantity    Int 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Order {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String    // Foreign Key to Store
  orderItems OrderItem[] // Relation to OrderItem model
  isPaid     Boolean   @default(false)
  phone      String    @default("")
  address    String    @default("")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([storeId])
}

// Intermediary for a many-to-many relationship
model OrderItem {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String @db.ObjectId // Foreign Key to Order
  order     Order   @relation(fields: [orderId], references: [id])
  productId String @db.ObjectId // Foreign Key to Product
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}




model Image {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  productId   String @db.ObjectId  // Foreign Key to Product
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url         String   // URL of the image
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([productId])
}

